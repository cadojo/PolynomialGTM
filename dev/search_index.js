var documenterSearchIndex = {"docs":
[{"location":"#PolynomialGTM.jl","page":"Quick Start","title":"PolynomialGTM.jl","text":"","category":"section"},{"location":"","page":"Quick Start","title":"Quick Start","text":"Longitudinal flight dynamics, approximated with polynomials!","category":"page"},{"location":"#Overview","page":"Quick Start","title":"Overview","text":"","category":"section"},{"location":"","page":"Quick Start","title":"Quick Start","text":"This is an unofficial implementation of publicly available approximated polynomial models  for NASA's Generic Transport Model aircraft. NASA Langley has developed a scaled-down  radio-controlled aircraft called the Generic Transport Model (GTM). This model is physically  similar to a typical commercial plane (think 737, etc.), and is used for off-nominal  flight control research. Chakraborty et al published a polynomial approximation for longitudinal GTM dynamics (near select flight conditions). Joe Carpinelli (me!) wrote these dynamics in Python, and replicated and summarized parts of Chakraborty et al's region of attraction analysis for the polynomial-approximated GTM dynamics. ","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"This Julia package extends ModelingToolkit.jl to provide this  polynomial-approximated model of longitudinal GTM flight dynamics to the Julia ecosystem! ","category":"page"},{"location":"#Usage","page":"Quick Start","title":"Usage","text":"","category":"section"},{"location":"","page":"Quick Start","title":"Quick Start","text":"This package exports two functions: GTM, and GTMFunction. The former constructs an ODESystem,  and the latter returns an ODEFunction associated with the model produced by GTM. Both functions  cache all outputs using Memoize.jl. ","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"Some PolynomialGTM-specific documentation can be found here, and in the docstrings.  See the ModelingToolkit documentation for more usage examples!","category":"page"},{"location":"#Installation-and-Startup","page":"Quick Start","title":"Installation and Startup","text":"","category":"section"},{"location":"","page":"Quick Start","title":"Quick Start","text":"You can install this package from Julia's General package registry with import Pkg; Pkg.install(\"PolynomialGTM\"), or with julia> ]install PolynomialGTM in Julia's REPL. ","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"using PolynomialGTM","category":"page"},{"location":"#Constructing-the-Model","page":"Quick Start","title":"Constructing the Model","text":"","category":"section"},{"location":"","page":"Quick Start","title":"Quick Start","text":"Generally, you'll just want to call GTM with no arguments.","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"model = GTM()","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"If you'd like to append state transition matrix dynamics, use stm=true. This appends state transition matrix dynamics to the model's equations  of motion.","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"model = GTM(; stm=true)","category":"page"},{"location":"#Constructing-the-Vector-Field","page":"Quick Start","title":"Constructing the Vector Field","text":"","category":"section"},{"location":"","page":"Quick Start","title":"Quick Start","text":"As before, you can optionally append state transition matrix dynamics  using stm=true. ","category":"page"},{"location":"","page":"Quick Start","title":"Quick Start","text":"f = GTMFunction() # or, with `stm=true`\nlet u = randn(4), p = randn(2), t = rand()\n    f(u,p,t)\nend","category":"page"},{"location":"docstrings/#Documentation","page":"Docstrings","title":"Documentation","text":"","category":"section"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"All docstrings!","category":"page"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"Modules = [\n    PolynomialGTM\n]\nOrder = [:module, :type, :function]","category":"page"},{"location":"docstrings/#PolynomialGTM.PolynomialGTM","page":"Docstrings","title":"PolynomialGTM.PolynomialGTM","text":"Provides unofficial implementations (in the form of ODESystem and ODEFunction instances) of a polynomial approximation for longitudinal aircraft dynamics. Specifically, these models approximate NASA's Generic Transport Model – a radio-controlled, sub-scale model aircraft which is used flight control research. These publicly available equations were published by Chakraborty et al.\n\nExtended help\n\nLicense\n\nMIT License\n\nCopyright (c) 2021 Joe Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExports\n\nGTM\nGTMFunction\n\nImports\n\nBase\nCore\nDocStringExtensions\nLinearAlgebra\nMemoize\nModelingToolkit\nSymbolics\n\n\n\n\n\n","category":"module"},{"location":"docstrings/#PolynomialGTM.GTM-Tuple{}","page":"Docstrings","title":"PolynomialGTM.GTM","text":"GTM(; stm, name)\n\n\nNASA's Generic Transport Model can be approximated (near select flight conditions) as a polynomial model. Here, GTM is a ModelingToolkit.ODESystem which provides publicly available polynomial approximations for GTM longitudinal flight dynamics.\n\nExtended Help\n\nInitial Conditions\n\nThe default initial conditions are one trim condition. Two trim conditions for these polynomial-approximated dynamics are shown below.\n\ntrim₁ = [[29.6, deg2rad(9), 0.0, deg2rad(9)],   [deg2rad(0.68), 12.7]]\ntrim₂ = [[25.0, deg2rad(18), 0.0, deg2rad(18)], [deg2rad(-7.2), 59]]\n\nUsage\n\nmodel = GTM()\n\nReferences:\n\nChakraborty et al\nJoe Carpinelli\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#PolynomialGTM.GTMFunction-Tuple{}","page":"Docstrings","title":"PolynomialGTM.GTMFunction","text":"GTMFunction(; stm, name, kwargs...)\n\n\nReturns a DifferentialEquations-compatible ODEFunction for GTM dynamics. The stm, and name keyword arguments are passed to GTM. All other keyword arguments are passed directly to ODEFunction.\n\nExtended Help\n\nUsage\n\nNote that this ODEFunction output has several methods, including an in-place method! Function signatures follow ModelingToolkit and DifferentialEquations conventions.\n\nf = GTMFunction()\nlet u = randn(4), p = randn(2), t = rand()\n    f(u,p,t)\nend\n\n\n\n\n\n","category":"method"}]
}
